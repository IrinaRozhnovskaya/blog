version: '2.1'
services:
  postgres:
    image: healthcheck/postgres:alpine
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
    networks:
      my-blog-private-net:
        aliases:
          - db.my-blog-private-net
  backend:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ../../../..
      dockerfile: ./docker/src/main/docker/Dockerfile
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
      POSTGRES_HOST: db.my-blog-private-net
    networks:
      my-blog-private-net:
        aliases:
          - blog
          - backend
          - blog.my-blog-private-net
          - backend.my-blog-private-net
  frontend:
    build:
      context: ../../../..
      dockerfile: ./docker/src/main/docker/frontend/Dockerfile
    networks:
      my-blog-private-net:
        aliases:
          - frontend.my-blog-private-net
  haproxy:
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    build:
      context: ../../../..
      dockerfile: ./docker/src/main/docker/haproxy/Dockerfile
    ports: ['80:80']
    networks:
      - my-blog-private-net
      - my-blog-public-net
  healthcheck:
    image: busybox
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
      haproxy:
        condition: service_healthy
    command: echo "ready."
    healthcheck:
      test: 'true'
    networks: [my-blog-private-net]
  testdata:
    depends_on:
      backend:
        condition: service_healthy
    build:
      context: ../../../..
      dockerfile: ./docker/src/main/docker/blog-cli/Dockerfile
    environment:
      BACKEND_HOSTNAME: blog.my-blog-private-net
    networks: [my-blog-private-net]
networks:
  my-blog-private-net:
    driver: bridge
  my-blog-public-net:
    driver: bridge
